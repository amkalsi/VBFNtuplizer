#include "TauSelector.h"

TauSelector::TauSelector(std::string name, TTree* tree, bool debug, const pset& iConfig):baseTree(name,tree,debug){
  
  SetBranches();
}

TauSelector::~TauSelector(){
  delete tree_;
}

void TauSelector::Fill(const edm::Event& iEvent){
Clear();

int taucoun = 0;
    edm::Handle<pat::TauCollection> taus;
    iEvent.getByToken(tauToken_, taus);
    for (const pat::Tau &tau : *taus) {
        if (tau.pt() < 20) continue;
        if(fabs(tau.eta()) > 2.3) continue;

	Tau_eta.push_back( tau.eta());
	Tau_phi.push_back( tau.phi());
	Tau_pt.push_back( tau.pt());
	Tau_energy.push_back( tau.energy());
	Tau_charge.push_back( tau.charge());

	// tau id. discriminators
	//std::cout<<"  before discrmin   "<<std::endl);
	Tau_decayModeFinding.push_back( tau.tauID("decayModeFinding"));
	Tau_decayModeFindingNewDMs.push_back( tau.tauID("decayModeFindingNewDMs"));
//	Tau_decayModeFindingOldDMs.push_back( tau.tauID("decayModeFindingOldDMs"));

	Tau_chargedIsoPtSum.push_back(tau.tauID("chargedIsoPtSum"));
	Tau_neutralIsoPtSum.push_back(tau.tauID("neutralIsoPtSum"));
	Tau_puCorrPtSum.push_back(tau.tauID("puCorrPtSum"));

//	Tau_byLooseCombinedIsolationDeltaBetaCorr.push_back(tau.tauID("byLooseCombinedIsolationDeltaBetaCorr"));
	Tau_byLooseCombinedIsolationDeltaBetaCorr3Hits.push_back(tau.tauID("byLooseCombinedIsolationDeltaBetaCorr3Hits"));

//	Tau_byMediumCombinedIsolationDeltaBetaCorr.push_back(tau.tauID("byMediumCombinedIsolationDeltaBetaCorr"));
	Tau_byMediumCombinedIsolationDeltaBetaCorr3Hits.push_back(tau.tauID("byMediumCombinedIsolationDeltaBetaCorr3Hits"));


//	Tau_byTightCombinedIsolationDeltaBetaCorr.push_back(tau.tauID("byTightCombinedIsolationDeltaBetaCorr"));
	Tau_byTightCombinedIsolationDeltaBetaCorr3Hits.push_back(tau.tauID("byTightCombinedIsolationDeltaBetaCorr3Hits"));

	Tau_byLooseIsolationMVA3newDMwLT.push_back(tau.tauID("byLooseIsolationMVA3newDMwLT"));
	Tau_byLooseIsolationMVA3newDMwoLT.push_back(tau.tauID("byLooseIsolationMVA3newDMwoLT"));
	Tau_byLooseIsolationMva3oldDMwLT.push_back(tau.tauID("byLooseIsolationMVA3oldDMwLT"));
	Tau_byLooseIsolationMVA3oldDMwoLT.push_back(tau.tauID("byLooseIsolationMVA3oldDMwoLT"));

	Tau_byMediumIsolationMVA3newDMwLT.push_back(tau.tauID("byMediumIsolationMVA3newDMwLT"));
	Tau_byMediumIsolationMVA3newDMwoLT.push_back(tau.tauID("byMediumIsolationMVA3newDMwoLT"));
	Tau_byMediumIsolationMva3oldDMwLT.push_back(tau.tauID("byMediumIsolationMVA3oldDMwLT"));
	Tau_byMediumIsolationMVA3oldDMwoLT.push_back(tau.tauID("byMediumIsolationMVA3oldDMwoLT"));

	Tau_byTightIsolationMVA3newDMwLT.push_back(tau.tauID("byTightIsolationMVA3newDMwLT"));
	Tau_byTightIsolationMVA3newDMwoLT.push_back(tau.tauID("byTightIsolationMVA3newDMwoLT"));

	Tau_byTightIsolationMva3oldDMwLT.push_back(tau.tauID("byTightIsolationMVA3oldDMwLT"));
	Tau_byTightIsolationMVA3oldDMwoLT.push_back(tau.tauID("byTightIsolationMVA3oldDMwoLT"));

	// discriminators against electrons/muons

	Tau_againstMuonLoose2.push_back( tau.tauID("againstMuonLoose2"));
	Tau_againstMuonLoose3.push_back( tau.tauID("againstMuonLoose3"));
	Tau_againstMuonTight2.push_back( tau.tauID("againstMuonTight2"));
	Tau_againstMuonTight3.push_back( tau.tauID("againstMuonTight3"));

	Tau_againstElectronMVALooseMVA5.push_back( tau.tauID("againstElectronLooseMVA5"));
	Tau_againstElectronMVAMediumMVA5.push_back( tau.tauID("againstElectronMediumMVA5"));
	Tau_againstElectronMVATightMVA5.push_back( tau.tauID("againstElectronTightMVA5"));

//	Tau_byVLooseCombinedIsolationDeltaBetaCorr.push_back( tau.tauID("byVLooseCombinedIsolationDeltaBetaCorr"));


	const reco::CandidatePtr hadTauLeadChargedCand = tau.leadChargedHadrCand();                                                                   

	TauLeadChargedCandPt.push_back(hadTauLeadChargedCand.isNonnull() ? hadTauLeadChargedCand->pt() : -1.);      
	TauLeadChargedCandCharge.push_back(hadTauLeadChargedCand.isNonnull() ? hadTauLeadChargedCand->charge() : -2);   
	TauLeadChargedCandEta.push_back(hadTauLeadChargedCand.isNonnull() ? hadTauLeadChargedCand->eta() : -999);
	TauLeadChargedCandPhi.push_back(hadTauLeadChargedCand.isNonnull() ? hadTauLeadChargedCand->phi() : -999);

	TauNProngs.push_back(tau.signalChargedHadrCands().size());
 taucoun++;
//  printf("tau  with pt %4.1f, dxy signif %.1f, ID(byMediumCombinedIsolationDeltaBetaCorr3Hits) %.1f, lead candidate pt %.1f, pdgId %d \n",
//   tau.pt(), tau.dxy_Sig(), tau.tauID("byMediumCombinedIsolationDeltaBetaCorr3Hits"), tau.leadCand()->pt(), tau.leadCand()->pdgId());
    }

if(taucoun >= 1) hFillTau->Fill(1);

/// HT 
}

void TauSelector::SetBranches(){
  if(debug_)    std::cout<<"setting branches: calling AddBranch of baseTree"<<std::endl;


  TREE->Branch("Tau_eta",&Tau_eta);
  TREE->Branch("Tau_phi",&Tau_phi);
  TREE->Branch("Tau_pt",&Tau_pt);
  TREE->Branch("Tau_energy",&Tau_energy);
  TREE->Branch("Tau_charge",&Tau_charge);
  TREE->Branch("Tau_decayModeFinding",&Tau_decayModeFinding);
  TREE->Branch("Tau_decayModeFindingNewDMs",&Tau_decayModeFindingNewDMs);
  TREE->Branch("Tau_decayModeFindingOldDMs",&Tau_decayModeFindingOldDMs);
  TREE->Branch("Tau_chargedIsoPtSum",&Tau_chargedIsoPtSum);
  TREE->Branch("Tau_neutralIsoPtSum",&Tau_neutralIsoPtSum);
  TREE->Branch("Tau_puCorrPtSum",&Tau_puCorrPtSum);
  TREE->Branch("Tau_byLooseCombinedIsolationDeltaBetaCorr",&Tau_byLooseCombinedIsolationDeltaBetaCorr);
                
  TREE->Branch("Tau_byLooseCombinedIsolationDeltaBetaCorr3Hits",&Tau_byLooseCombinedIsolationDeltaBetaCorr3Hits);
  TREE->Branch("Tau_byMediumCombinedIsolationDeltaBetaCorr",&Tau_byMediumCombinedIsolationDeltaBetaCorr);
  TREE->Branch("Tau_byMediumCombinedIsolationDeltaBetaCorr3Hits",&Tau_byMediumCombinedIsolationDeltaBetaCorr3Hits);
  TREE->Branch("Tau_byTightCombinedIsolationDeltaBetaCorr",&Tau_byTightCombinedIsolationDeltaBetaCorr);
  TREE->Branch("Tau_byTightCombinedIsolationDeltaBetaCorr3Hits",&Tau_byTightCombinedIsolationDeltaBetaCorr3Hits);
  TREE->Branch("Tau_byLooseIsolationMVA3newDMwLT",&Tau_byLooseIsolationMVA3newDMwLT);
  TREE->Branch("Tau_byLooseIsolationMVA3newDMwoLT",&Tau_byLooseIsolationMVA3newDMwoLT);
  TREE->Branch("Tau_byLooseIsolationMva3oldDMwLT",&Tau_byLooseIsolationMva3oldDMwLT);
  TREE->Branch("Tau_byLooseIsolationMVA3oldDMwoLT",&Tau_byLooseIsolationMVA3oldDMwoLT);

  TREE->Branch("Tau_byMediumIsolationMVA3newDMwLT",&Tau_byMediumIsolationMVA3newDMwLT);
  TREE->Branch("Tau_byMediumIsolationMVA3newDMwoLT",&Tau_byMediumIsolationMVA3newDMwoLT);
  TREE->Branch("Tau_byMediumIsolationMva3oldDMwLT",&Tau_byMediumIsolationMva3oldDMwLT);
  TREE->Branch("Tau_byMediumIsolationMVA3oldDMwoLT",&Tau_byMediumIsolationMVA3oldDMwoLT);
  TREE->Branch("Tau_byTightIsolationMVA3newDMwLT",&Tau_byTightIsolationMVA3newDMwLT);
  TREE->Branch("Tau_byTightIsolationMVA3newDMwoLT",&Tau_byTightIsolationMVA3newDMwoLT);
  TREE->Branch("Tau_byTightIsolationMva3oldDMwLT",&Tau_byTightIsolationMva3oldDMwLT);
  TREE->Branch("Tau_byTightIsolationMVA3oldDMwoLT",&Tau_byTightIsolationMVA3oldDMwoLT);
  TREE->Branch("Tau_againstMuonLoose2",&Tau_againstMuonLoose2);
  TREE->Branch("Tau_againstMuonLoose3",&Tau_againstMuonLoose3);
  TREE->Branch("Tau_againstMuonTight2",&Tau_againstMuonTight2);
  TREE->Branch("Tau_againstMuonTight3",&Tau_againstMuonTight3);
                
  TREE->Branch("Tau_againstElectronMVALooseMVA5",&Tau_againstElectronMVALooseMVA5);
  TREE->Branch("Tau_againstElectronMVAMediumMVA5",&Tau_againstElectronMVAMediumMVA5);
  TREE->Branch("Tau_againstElectronMVATightMVA5",&Tau_againstElectronMVATightMVA5);
  TREE->Branch("Tau_byVLooseCombinedIsolationDeltaBetaCorr",&Tau_byVLooseCombinedIsolationDeltaBetaCorr);

  TREE->Branch("TauLeadChargedCandPt",&TauLeadChargedCandPt);
  TREE->Branch("TauLeadChargedCandCharge",&TauLeadChargedCandCharge);
  TREE->Branch("TauLeadChargedCandEta",&TauLeadChargedCandEta);
  TREE->Branch("TauLeadChargedCandPhi",&TauLeadChargedCandPhi);

  TREE->Branch("TauNProngs",&TauNProngs);


}

void TauSelector::Clear(){

  Tau_eta.clear(); 
  Tau_phi.clear(); 
  Tau_pt.clear(); 
  Tau_energy.clear(); 
  Tau_charge.clear(); 
  Tau_decayModeFinding.clear(); 
  Tau_decayModeFindingNewDMs.clear(); 
  Tau_decayModeFindingOldDMs.clear(); 
  Tau_chargedIsoPtSum.clear(); 
  Tau_neutralIsoPtSum.clear(); 
  Tau_puCorrPtSum.clear(); 
  Tau_byLooseCombinedIsolationDeltaBetaCorr.clear(); 
  Tau_byLooseCombinedIsolationDeltaBetaCorr3Hits.clear(); 
  Tau_byMediumCombinedIsolationDeltaBetaCorr.clear(); 
  Tau_byMediumCombinedIsolationDeltaBetaCorr3Hits.clear(); 
  Tau_byTightCombinedIsolationDeltaBetaCorr.clear(); 
  Tau_byTightCombinedIsolationDeltaBetaCorr3Hits.clear(); 
  Tau_byLooseIsolationMVA3newDMwLT.clear();
  Tau_byLooseIsolationMVA3newDMwoLT.clear();
  Tau_byLooseIsolationMva3oldDMwLT.clear();
  Tau_byLooseIsolationMVA3oldDMwoLT.clear();
  Tau_byMediumIsolationMVA3newDMwLT.clear();
  Tau_byMediumIsolationMVA3newDMwoLT.clear();
  Tau_byMediumIsolationMva3oldDMwLT.clear();
  Tau_byMediumIsolationMVA3oldDMwoLT.clear();
  Tau_byTightIsolationMVA3newDMwLT.clear();
  Tau_byTightIsolationMVA3newDMwoLT.clear();
  Tau_byTightIsolationMva3oldDMwLT.clear();
  Tau_byTightIsolationMVA3oldDMwoLT.clear();
  Tau_againstMuonLoose2.clear();
  Tau_againstMuonLoose3.clear();
  Tau_againstMuonTight2.clear();
  Tau_againstMuonTight3.clear();
  Tau_againstElectronMVALooseMVA5.clear();
  Tau_againstElectronMVAMediumMVA5.clear();
  Tau_againstElectronMVATightMVA5.clear();
  Tau_byVLooseCombinedIsolationDeltaBetaCorr.clear();

  TauLeadChargedCandPt.clear();
  TauLeadChargedCandCharge.clear();
  TauLeadChargedCandEta.clear();
  TauLeadChargedCandPhi.clear();
  
  TauNProngs.clear();
}
